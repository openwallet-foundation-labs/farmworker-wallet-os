// This file was generated by Mendix Studio Pro.
//
// WARNING: Only the following code will be retained when actions are regenerated:
// - the import list
// - the code between BEGIN USER CODE and END USER CODE
// - the code between BEGIN EXTRA CODE and END EXTRA CODE
// Other code you write will be lost the next time you deploy the project.
import "mx-global";
import { Big } from "big.js";

// BEGIN EXTRA CODE
import{cache}from"../support/entidad";
// END EXTRA CODE

/**
 *  (method) Peripheral.registerOnDisconnectedListener(cb: ({ identifier }: {
 *      identifier: string;
 *  }) => void): EmitterSubscription
 * @param {Nanoflow} callback
 * @param {string} identifier_parameter_name - optional
 * @param {MxObject} user_data - optional
 * @param {string} user_data_parameter_name - optional
 * @returns {Promise.<void>}
 */
export async function jsa_animo_ble_peripheral_registerOnDisconnectedListener(callback, identifier_parameter_name, user_data, user_data_parameter_name) {
	// BEGIN USER CODE
	try{
		if(callback==null)return(Promise.reject("callback null"));
		if(identifier_parameter_name==null)identifier_parameter_name='identifier';
		if(user_data_parameter_name==null)user_data_parameter_name='Peripheral';
		let peripheral=cache.get("peripheral");
		if(peripheral==null)return(Promise.reject("Peripheral not found in cache"));
		peripheral.registerOnDisconnectedListener((identifier)=>{
			let args={};
			if(identifier_parameter_name!=null)args[identifier_parameter_name]=JSON.stringify(identifier);
			if(user_data_parameter_name!=null)args[user_data_parameter_name]=user_data;
			callback(args);
		});
		return(Promise.resolve());
	}catch(e){
		return Promise.reject(e.toString());
	}
	// END USER CODE
}
