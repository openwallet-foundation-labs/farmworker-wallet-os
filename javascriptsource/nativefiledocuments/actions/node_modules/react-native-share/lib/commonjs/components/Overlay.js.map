{"version":3,"sources":["Overlay.tsx"],"names":["DEFAULT_ANIMATE_TIME","styles","StyleSheet","create","emptyOverlay","backgroundColor","height","position","width","fullOverlay","bottom","left","right","top","Overlay","visible","children","fadeAnim","React","useState","Animated","Value","overlayStyle","setOverlayStyle","onAnimatedEnd","useCallback","useEffect","timing","toValue","duration","useNativeDriver","start","opacity"],"mappings":";;;;;;;AAAA;;AACA;;;;;;AAEA,MAAMA,oBAAoB,GAAG,GAA7B;;AACA,MAAMC,MAAM,GAAGC,wBAAWC,MAAX,CAAkB;AAC/BC,EAAAA,YAAY,EAAE;AACZC,IAAAA,eAAe,EAAE,aADL;AAEZC,IAAAA,MAAM,EAAE,CAFI;AAGZC,IAAAA,QAAQ,EAAE,UAHE;AAIZC,IAAAA,KAAK,EAAE;AAJK,GADiB;AAO/BC,EAAAA,WAAW,EAAE;AACXJ,IAAAA,eAAe,EAAE,aADN;AAEXK,IAAAA,MAAM,EAAE,CAFG;AAGXC,IAAAA,IAAI,EAAE,CAHK;AAIXJ,IAAAA,QAAQ,EAAE,UAJC;AAKXK,IAAAA,KAAK,EAAE,CALI;AAMXC,IAAAA,GAAG,EAAE;AANM;AAPkB,CAAlB,CAAf;;AAqBA,MAAMC,OAAwD,GAAG,CAAC;AAAEC,EAAAA,OAAF;AAAWC,EAAAA;AAAX,CAAD,KAA2B;AAC1F,QAAM,CAACC,QAAD,IAAaC,KAAK,CAACC,QAAN,CAAe,IAAIC,sBAASC,KAAb,CAAmB,CAAnB,CAAf,CAAnB;AACA,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCL,KAAK,CAACC,QAAN,CAAqClB,MAAM,CAACG,YAA5C,CAAxC;AAEA,QAAMoB,aAAa,GAAGN,KAAK,CAACO,WAAN,CAAkB,MAAM;AAC5C,QAAI,CAACV,OAAL,EAAc;AACZQ,MAAAA,eAAe,CAACtB,MAAM,CAACG,YAAR,CAAf;AACD;AACF,GAJqB,EAInB,CAACW,OAAD,CAJmB,CAAtB;AAMAG,EAAAA,KAAK,CAACQ,SAAN,CAAgB,MAAM;AACpB,QAAIX,OAAJ,EAAa;AACXQ,MAAAA,eAAe,CAACtB,MAAM,CAACQ,WAAR,CAAf;AACD;;AACD,WAAOW,sBAASO,MAAT,CAAgBV,QAAhB,EAA0B;AAC/BW,MAAAA,OAAO,EAAEb,OAAO,GAAG,CAAH,GAAO,CADQ;AAE/Bc,MAAAA,QAAQ,EAAE7B,oBAFqB;AAG/B8B,MAAAA,eAAe,EAAE;AAHc,KAA1B,EAIJC,KAJI,CAIEP,aAJF,CAAP;AAKD,GATD,EASG,CAACT,OAAD,EAAUE,QAAV,EAAoBO,aAApB,CATH;AAWA,sBAAO,oBAAC,qBAAD,CAAU,IAAV;AAAe,IAAA,KAAK,EAAE,CAACF,YAAD,EAAe;AAAEU,MAAAA,OAAO,EAAEf;AAAX,KAAf;AAAtB,KAA8DD,QAA9D,CAAP;AACD,CAtBD;;eAwBeF,O","sourcesContent":["import * as React from 'react';\nimport { Animated, StyleProp, StyleSheet, ViewStyle } from 'react-native';\n\nconst DEFAULT_ANIMATE_TIME = 300;\nconst styles = StyleSheet.create({\n  emptyOverlay: {\n    backgroundColor: 'transparent',\n    height: 0,\n    position: 'absolute',\n    width: 0,\n  },\n  fullOverlay: {\n    backgroundColor: 'transparent',\n    bottom: 0,\n    left: 0,\n    position: 'absolute',\n    right: 0,\n    top: 0,\n  },\n});\n\nexport interface OverlayProps {\n  visible: boolean;\n}\n\nconst Overlay: React.FC<React.PropsWithChildren<OverlayProps>> = ({ visible, children }) => {\n  const [fadeAnim] = React.useState(new Animated.Value(0));\n  const [overlayStyle, setOverlayStyle] = React.useState<StyleProp<ViewStyle>>(styles.emptyOverlay);\n\n  const onAnimatedEnd = React.useCallback(() => {\n    if (!visible) {\n      setOverlayStyle(styles.emptyOverlay);\n    }\n  }, [visible]);\n\n  React.useEffect(() => {\n    if (visible) {\n      setOverlayStyle(styles.fullOverlay);\n    }\n    return Animated.timing(fadeAnim, {\n      toValue: visible ? 1 : 0,\n      duration: DEFAULT_ANIMATE_TIME,\n      useNativeDriver: false,\n    }).start(onAnimatedEnd);\n  }, [visible, fadeAnim, onAnimatedEnd]);\n\n  return <Animated.View style={[overlayStyle, { opacity: fadeAnim }]}>{children}</Animated.View>;\n};\n\nexport default Overlay;\n"]}