// This file was generated by Mendix Studio Pro.
//
// WARNING: Only the following code will be retained when actions are regenerated:
// - the import list
// - the code between BEGIN USER CODE and END USER CODE
// - the code between BEGIN EXTRA CODE and END EXTRA CODE
// Other code you write will be lost the next time you deploy the project.
import "mx-global";
import { Big } from "big.js";

// BEGIN EXTRA CODE

import NativeFileDocumentsUtils from "../nativefiledocumentsutils";
import RNFS from "react-native-fs";
import { Platform } from 'react-native';

// END EXTRA CODE

/**
 * Write base64 encoded contents to file.
 * @param {string} filepath - The path to the file or directory.
 * @param {"NativeFileDocuments.PathType.FullPath"|"NativeFileDocuments.PathType.DocumentsDirectory"} pathType
 * @param {string} base64Data
 * @param {boolean} writeToLog
 * @returns {Promise.<boolean>}
 */
export async function writeFile(filepath, pathType, base64Data, writeToLog) {
	// BEGIN USER CODE

	return new Promise(function (resolve, reject) {
		if (!filepath) {
			reject(new Error("No file path specified"));
		}
		if (!pathType) {
			reject(new Error("No path type specified"));
		}
		if (!base64Data) {
			reject(new Error("No data specified"));
		}
		if (writeToLog) {
			NativeFileDocumentsUtils.writeToLog({
				actionName: "writeFile",
				logType: "Parameters",
				logMessage: JSON.stringify({
					filepath: filepath,
					pathType: pathType,
					dataLength: base64Data.length
				})
			});
		}

		const fullPath = NativeFileDocumentsUtils.getFullPath(filepath, pathType, RNFS, Platform.OS);

		if (writeToLog) {
			NativeFileDocumentsUtils.writeToLog({
				actionName: "writeFile",
				logType: "Info",
				logMessage: "Full path: " + fullPath
			});
		}

		RNFS.writeFile(fullPath, base64Data, "base64").then(() => {
			resolve(true);
		});
	});

	// END USER CODE
}
